///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: Nov 16th, 2021
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// INCLUDES
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/Core/EngineCommon.h"
#include "Engine/Math/MathUtils.h"
#include "Engine/Math/Matrix3.h"
#include "Engine/Math/Triangle2.h"
#include "Engine/Math/Triangle3.h"


///--------------------------------------------------------------------------------------------------------------------------------------------------
/// DEFINES
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// ENUMS, TYPEDEFS, STRUCTS, FORWARD DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// GLOBALS AND STATICS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// C FUNCTIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// CLASS IMPLEMENTATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
Triangle2 Triangle3::GetInPlaneRepresentation() const
{
	Matrix3 basisVectors;
	GetIJBasis(basisVectors);
	basisVectors.Invert(); // Invert to go into this space, not out

	// Choose a to be the origin
	Vector2 a = Vector2::ZERO;

	// Determine the other values in this space

	Vector2 b = (basisVectors * (m_b - m_a)).xy;
	Vector2 c = (basisVectors * (m_c - m_a)).xy;

	return Triangle2(a, b, c);
}


//-------------------------------------------------------------------------------------------------
Vector2 Triangle3::TransformPointInto2DBasis(const Vector3& point) const
{
	Matrix3 basisVectors;
	GetIJBasis(basisVectors);
	basisVectors.Invert();

	return (basisVectors * (point - m_a)).xy;
}


//-------------------------------------------------------------------------------------------------
Vector3 Triangle3::TransformPointOutOf2DBasis(const Vector2& point) const
{
	Matrix3 basisVectors;
	GetIJBasis(basisVectors);

	return basisVectors * Vector3(point, 0.f); // K basic of the matrix is (0,0,0) so the last component here doesn't matter
}


//-------------------------------------------------------------------------------------------------
void Triangle3::GetIJBasis(Matrix3& out_bases) const
{
	// Choose ab to be the i vector
	out_bases.iBasis = (m_b - m_a);

	// Choose ac to be the j vector
	out_bases.jBasis = (m_c - m_a);

	// No k basis needed
	out_bases.kBasis = Vector3::ZERO;
}
