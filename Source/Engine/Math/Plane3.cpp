///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: November 23rd, 2020
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// INCLUDES
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/Core/EngineCommon.h"
#include "Engine/Math/MathUtils.h"
#include "Engine/Math/Plane3.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// DEFINES
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// ENUMS, TYPEDEFS, STRUCTS, FORWARD DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// GLOBALS AND STATICS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// C FUNCTIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// CLASS IMPLEMENTATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
Plane3::Plane3(const Vector3& normal, float distance)
	: m_normal(normal), m_distance(distance)
{

}


//-------------------------------------------------------------------------------------------------
Plane3::Plane3(const Vector3& normal, const Vector3& pointOnPlane)
	: m_normal(normal)
{
	m_distance = DotProduct(normal, pointOnPlane);
}


//-------------------------------------------------------------------------------------------------
bool Plane3::ContainsPoint(const Vector3& point) const
{
	return (AreMostlyEqual(GetDistanceFromPlane(point), 0.f));
}


//-------------------------------------------------------------------------------------------------
bool Plane3::IsPointInFront(const Vector3& point) const
{
	return (GetDistanceFromPlane(point) > -DEFAULT_EPSILON);
}


//-------------------------------------------------------------------------------------------------
bool Plane3::IsPointBehind(const Vector3& point) const
{
	return (GetDistanceFromPlane(point) < DEFAULT_EPSILON);
}


//-------------------------------------------------------------------------------------------------
float Plane3::GetDistanceFromPlane(const Vector3& point) const
{
	return DotProduct(m_normal, point) - m_distance;
}


//-------------------------------------------------------------------------------------------------
Vector3 Plane3::GetProjectedPointOntoPlane(const Vector3& point) const
{
	float distance = GetDistanceFromPlane(point);
	return point - (m_normal * distance);
}
