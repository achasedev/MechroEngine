///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: Nov 19th, 2021
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// INCLUDES
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/Core/EngineCommon.h"
#include "Engine/Math/MathUtils.h"
#include "Engine/Math/Tetrahedron.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// DEFINES
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// ENUMS, TYPEDEFS, STRUCTS, FORWARD DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// GLOBALS AND STATICS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// C FUNCTIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// CLASS IMPLEMENTATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
Tetrahedron::Tetrahedron(const Vector3& a, const Vector3& b, const Vector3& c, const Vector3& d)
	: m_a(a), m_b(b), m_c(c), m_d(d)
{
}


//-------------------------------------------------------------------------------------------------
void Tetrahedron::GetFaces(Triangle3* out_faces) const
{
	// BDC - X Barycentric Coordinate
	out_faces[0] = Triangle3(m_b, m_d, m_c);

	// CDA - Y Barycentric Coordinate
	out_faces[1] = Triangle3(m_c, m_d, m_a);

	// ADB - Z Barycentric Coordinate 
	out_faces[2] = Triangle3(m_a, m_d, m_b);

	// ABC - W Barycentric Coordinate
	out_faces[3] = Triangle3(m_a, m_b, m_c);
}


//-------------------------------------------------------------------------------------------------
float Tetrahedron::CalculateSignedVolume() const
{
	// Do cross s.t. with a "correct clockwise" winding order the volume is positive
	// In other words, if the normal of ABC points towards D (inward), volume will be negative
	return (1.f / 6.f) * DotProduct(CrossProduct(m_c - m_a, m_b - m_a), m_d - m_a);
}


//-------------------------------------------------------------------------------------------------
float Tetrahedron::CalculateUnsignedVolume() const
{
	return Abs(CalculateSignedVolume());
}
