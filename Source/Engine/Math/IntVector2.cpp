///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: November 28th, 2019
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** INCLUDES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/Math/IntVector2.h"

#include "Engine/Math/Vector2.h"
#include <math.h>

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                              *** DEFINES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                              *** TYPES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                              *** STRUCTS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                        *** GLOBALS AND STATICS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------
const IntVector2 IntVector2::ZERO = IntVector2(0, 0);
const IntVector2 IntVector2::ONES = IntVector2(1, 1);

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                            *** C FUNCTIONS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                              *** CLASSES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
IntVector2::IntVector2(const IntVector2& copy)
	: x(copy.x)
	, y(copy.y)
{
}


//-------------------------------------------------------------------------------------------------
IntVector2::IntVector2(int initialX, int initialY)
	: x(initialX)
	, y(initialY)
{
}


//-------------------------------------------------------------------------------------------------
IntVector2::IntVector2(float initialX, float initialY)
	: x(static_cast<int>(initialX))
	, y(static_cast<int>(initialY))
{
}


//-------------------------------------------------------------------------------------------------
IntVector2::IntVector2(const Vector2& floatVector)
	: x(static_cast<int>(floatVector.x))
	, y(static_cast<int>(floatVector.y))
{
}


//-------------------------------------------------------------------------------------------------
IntVector2::IntVector2(int initialValue)
	: x(initialValue), y(initialValue)
{
}


//-------------------------------------------------------------------------------------------------
const IntVector2 IntVector2::operator+(const IntVector2& addVector) const
{
	return IntVector2((x + addVector.x), (y + addVector.y));
}


//-------------------------------------------------------------------------------------------------
const IntVector2 IntVector2::operator-(const IntVector2& subVector) const
{
	return IntVector2((x - subVector.x), (y - subVector.y));
}


//-------------------------------------------------------------------------------------------------
const IntVector2 IntVector2::operator*(int uniformScale) const
{
	return IntVector2((x * uniformScale), (y * uniformScale));
}


//-------------------------------------------------------------------------------------------------
const IntVector2 IntVector2::operator/(int divisor) const
{
	return IntVector2((x / divisor), (y / divisor));
}


//-------------------------------------------------------------------------------------------------
void IntVector2::operator+=(const IntVector2& addVector)
{
	x += addVector.x;
	y += addVector.y;
}


//-------------------------------------------------------------------------------------------------
void IntVector2::operator-=(const IntVector2& subVector)
{
	x -= subVector.x;
	y -= subVector.y;
}


//-------------------------------------------------------------------------------------------------
void IntVector2::operator*=(const int uniformScaler)
{
	x *= uniformScaler;
	y *= uniformScaler;
}


//-------------------------------------------------------------------------------------------------
void IntVector2::operator=(const IntVector2& copyFrom)
{
	x = copyFrom.x;
	y = copyFrom.y;
}


//-------------------------------------------------------------------------------------------------
const IntVector2 operator*(int uniformScaler, const IntVector2& vecToScale)
{
	return vecToScale * uniformScaler;
}


//-------------------------------------------------------------------------------------------------
bool IntVector2::operator==(const IntVector2& compare) const
{
	return (x == compare.x && y == compare.y);
}


//-------------------------------------------------------------------------------------------------
bool IntVector2::operator!=(const IntVector2& compare) const
{
	return (x != compare.x || y != compare.y);
}
