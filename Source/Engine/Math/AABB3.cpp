///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: March 17th, 2020
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// INCLUDES
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/Math/AABB3.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// DEFINES
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// ENUMS, TYPEDEFS, STRUCTS, FORWARD DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// GLOBALS AND STATICS
///--------------------------------------------------------------------------------------------------------------------------------------------------
const AABB3 AABB3::ZERO_TO_ONE = AABB3(Vector3::ZERO, Vector3::ONES);

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// C FUNCTIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// CLASS IMPLEMENTATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
AABB3::AABB3(const Vector3& mins, const Vector3& maxs)
	: mins(mins), maxs(maxs)
{
}


//-------------------------------------------------------------------------------------------------
AABB3::AABB3(const Vector3& center, float xExtent, float yExtent, float zExtent)
	: mins(Vector3((center.x - xExtent), (center.y - yExtent), (center.z - zExtent)))
	, maxs(Vector3((center.x + xExtent), (center.y + yExtent), (center.z + zExtent)))
{
}


//-------------------------------------------------------------------------------------------------
Vector3 AABB3::GetDimensions() const
{
	return (maxs - mins);
}


//-------------------------------------------------------------------------------------------------
Vector3 AABB3::GetCenter() const
{
	return (maxs + mins) * 0.5f;
}


//-------------------------------------------------------------------------------------------------
Vector3 AABB3::GetFrontBottomLeft() const
{
	return Vector3(mins.x, mins.y, maxs.z);
}


//-------------------------------------------------------------------------------------------------
Vector3 AABB3::GetFrontBottomRight() const
{
	return Vector3(maxs.x, mins.y, maxs.z);
}


//-------------------------------------------------------------------------------------------------
Vector3 AABB3::GetFrontTopRight() const
{
	return maxs;
}


//-------------------------------------------------------------------------------------------------
Vector3 AABB3::GetFrontTopLeft() const
{
	return Vector3(mins.x, maxs.y, maxs.z);
}


//-------------------------------------------------------------------------------------------------
Vector3 AABB3::GetBackBottomLeft() const
{
	return mins;
}


//-------------------------------------------------------------------------------------------------
Vector3 AABB3::GetBackBottomRight() const
{
	return Vector3(maxs.x, mins.y, mins.z);
}


//-------------------------------------------------------------------------------------------------
Vector3 AABB3::GetBackTopRight() const
{
	return Vector3(maxs.x, maxs.y, mins.z);
}


//-------------------------------------------------------------------------------------------------
Vector3 AABB3::GetBackTopLeft() const
{
	return Vector3(mins.x, maxs.y, mins.z);
}


//-------------------------------------------------------------------------------------------------
AABB3 AABB3::GetTranslated(const Vector3& translation) const
{
	return AABB3(mins + translation, maxs + translation);
}


//-------------------------------------------------------------------------------------------------
bool AABB3::ContainsPoint(const Vector3& point) const
{
	bool outsideX = point.x > maxs.x || point.x < mins.x;
	bool outsideY = point.y > maxs.y || point.y < mins.y;
	bool outsideZ = point.z > maxs.z || point.z < mins.z;

	if (outsideX || outsideY || outsideZ)
	{
		return false;
	}

	return true;
}
