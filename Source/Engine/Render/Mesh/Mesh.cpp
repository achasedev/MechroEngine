///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: February 15th, 2020
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// INCLUDES
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/Render/Core/DX11Common.h"
#include "Engine/Render/Mesh/Mesh.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// DEFINES
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// ENUMS, TYPEDEFS, STRUCTS, FORWARD DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// GLOBALS AND STATICS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// C FUNCTIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// CLASS IMPLEMENTATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------


//-------------------------------------------------------------------------------------------------
void Mesh::Load(const char* filepath)
{
	UNIMPLEMENTED();

	//Clear();

	// Open the file

	// What format? Hello?

	// Done!
}


//-------------------------------------------------------------------------------------------------
void Mesh::Refresh()
{
	UNIMPLEMENTED();
}


//-------------------------------------------------------------------------------------------------
R<Mesh> Mesh::Copy()
{
	UNIMPLEMENTED();
}


//-------------------------------------------------------------------------------------------------
void Mesh::Clear()
{
	UNIMPLEMENTED();
}


//-------------------------------------------------------------------------------------------------
void Mesh::SetIndices(const uint32* indices, uint32 indexCount)
{
	if (indices == nullptr || indexCount == 0)
	{
		ID3D11Buffer* indexDxHandle = m_indexBuffer.GetDxHandle();
		//DX_SAFE_RELEASE(indexDxHandle);
	}
	else
	{
		m_indexBuffer.CopyToGPU(indices, indexCount);
	}
}

//-------------------------------------------------------------------------------------------------
void Mesh::SetDrawInstruction(DrawInstruction instruction)
{
	m_instruction = instruction;
}


//-------------------------------------------------------------------------------------------------
void Mesh::SetDrawInstruction(bool useIndices, uint32 startIndex, uint32 elementCount)
{
	m_instruction = DrawInstruction(useIndices, startIndex, elementCount);
}


//-------------------------------------------------------------------------------------------------
const VertexBuffer* Mesh::GetVertexBuffer() const
{
	return &m_vertexBuffer;
}


//-------------------------------------------------------------------------------------------------
const IndexBuffer* Mesh::GetIndexBuffer() const
{
	return &m_indexBuffer;
}


//-------------------------------------------------------------------------------------------------
DrawInstruction Mesh::GetDrawInstruction() const
{
	return m_instruction;
}


//-------------------------------------------------------------------------------------------------
const VertexLayout* Mesh::GetVertexLayout() const
{
	return m_vertexLayout;
}
