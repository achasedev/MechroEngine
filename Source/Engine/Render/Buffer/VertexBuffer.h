///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: December 16th, 2019
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------
#pragma once

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// INCLUDES
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/Render/Buffer/RenderBuffer.h"
#include "Engine/Render/Mesh/Vertex.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// DEFINES
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// ENUMS, TYPEDEFS, STRUCTS, FORWARD DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// GLOBALS AND STATICS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// CLASS DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
class VertexBuffer : public RenderBuffer
{
public:
	//-----Public Methods-----

	VertexBuffer() {}
	virtual ~VertexBuffer() override {}

	template <typename VERT_TYPE>
	bool CopyToGPU(const VERT_TYPE* vertices, const uint32 vertexCount)
	{
		size_t sizeNeeded = sizeof(VERT_TYPE) * vertexCount;

		bool succeeded = false;
		if (sizeNeeded > GetBufferSize() || IsStatic())
		{
			succeeded = CreateOnGPU(vertices, sizeNeeded, sizeof(VERT_TYPE), RENDER_BUFFER_USAGE_VERTEX_STREAM_BIT, GPU_MEMORY_USAGE_DYNAMIC);
		}
		else
		{
			ASSERT_OR_DIE(IsDynamic(), "VertexBuffer not dynamic!");
			succeeded = RenderBuffer::CopyToGPU(vertices, sizeNeeded);
		}

		m_vertexCount = (succeeded ? vertexCount : 0U);
		m_layout = (succeeded ? &VERT_TYPE::LAYOUT : nullptr);

		return succeeded;
	}

	const VertexLayout* GetVertexLayout() const { return m_layout; }


private:
	//-----Private Data-----

	uint32 m_vertexCount = 0;
	const VertexLayout* m_layout = nullptr;

};

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// C FUNCTIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------
