///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: October 2nd, 2020
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------
#pragma once

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// INCLUDES
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/Utility/LockJanitor.h"
#include <queue>

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// DEFINES
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// ENUMS, TYPEDEFS, STRUCTS, FORWARD DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// GLOBALS AND STATICS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// CLASS DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
template <typename T>
class ThreadSafeQueue
{
public:
	//-----Public Methods-----

	void Enqueue(const T& value);
	bool Dequeue(T& out_value);
	bool IsEmpty();


private:
	//-----Private Data-----

	std::mutex m_lock;
	std::queue<T> m_queue;

};


//-------------------------------------------------------------------------------------------------
template <typename T>
void ThreadSafeQueue<T>::Enqueue(const T& value)
{
	LOCK_JANITOR(m_lock);
	m_queue.push(value);
}


//-------------------------------------------------------------------------------------------------
template <typename T>
bool ThreadSafeQueue<T>::Dequeue(T& out_value)
{
	LOCK_JANITOR(m_lock);
	bool hasItem = (m_queue.size() != 0);

	if (hasItem)
	{
		out_value = m_queue.front();
		m_queue.pop();
	}

	return hasItem;
}


//-------------------------------------------------------------------------------------------------
template <typename T>
bool ThreadSafeQueue<T>::IsEmpty()
{
	LOCK_JANITOR(m_lock);
	bool isEmpty = m_queue.empty();

	return isEmpty;
}


///--------------------------------------------------------------------------------------------------------------------------------------------------
/// C FUNCTIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------
