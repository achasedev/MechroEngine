///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: March 18, 2021
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// INCLUDES
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/Collision/3D/Collider3d.h"
#include "Engine/Framework/EngineCommon.h"
#include "Engine/Math/Transform.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// DEFINES
///--------------------------------------------------------------------------------------------------------------------------------------------------
RTTI_TYPE_DEFINE(Collider3d);
RTTI_TYPE_DEFINE(SphereCollider3d);
RTTI_TYPE_DEFINE(BoxCollider3d);
RTTI_TYPE_DEFINE(CapsuleCollider3d);
RTTI_TYPE_DEFINE(PolytopeCollider3d);

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// ENUMS, TYPEDEFS, STRUCTS, FORWARD DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// GLOBALS AND STATICS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// C FUNCTIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// CLASS IMPLEMENTATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------


//-------------------------------------------------------------------------------------------------
Sphere3d SphereCollider3d::GetWorldBounds() const
{
	Vector3 positionWs = m_bounds.center;

	if (m_transform != nullptr)
	{
		positionWs = m_transform->TransformPositionLocalToWorld(positionWs);
	}

	return Sphere3d(positionWs, m_bounds.radius);
}


//-------------------------------------------------------------------------------------------------
BoxCollider3d::BoxCollider3d(const OBB3& localBounds)
{
	SetLocalBounds(localBounds);
}


//-------------------------------------------------------------------------------------------------
void BoxCollider3d::SetLocalBounds(const OBB3& localBounds)
{
	m_bounds = localBounds;
}


//-------------------------------------------------------------------------------------------------
OBB3 BoxCollider3d::GetWorldBounds() const
{
	if (m_transform == nullptr)
	{
		return m_bounds;
	}

	Matrix44 colliderMat = m_transform->GetLocalToWorldMatrix();
	Matrix44 boundsAsMat = m_bounds.GetMatrixRepresentation();
	Matrix44 finalMat = colliderMat * boundsAsMat;

	return OBB3(finalMat);
}
