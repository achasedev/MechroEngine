///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: March 8th, 2020
/// Description: Hashed c-string class
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** INCLUDES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/Utility/StringID.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** DEFINES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                              *** TYPES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** STRUCTS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                        *** GLOBALS AND STATICS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                           *** C FUNCTIONS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------


//-------------------------------------------------------------------------------------------------
StringID HashString(const char* str)
{
	// djb2 hash function, by Dan Bernstein
	uint hashValue = 5381;
	uint c;

	while (c = (uint)*str++)
	{
		hashValue = ((hashValue << 5) + hashValue) + c;
	}

	return static_cast<StringID>(hashValue);
}


///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** CLASSES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
void StringIDManager::Initialize()
{
	s_instance = new StringIDManager();
}


//-------------------------------------------------------------------------------------------------
void StringIDManager::Shutdown()
{
	SAFE_DELETE_POINTER(s_instance);
}


//-------------------------------------------------------------------------------------------------
// Debug-only function for storing StringID -> strings and checking for collisions
StringID StringIDManager::InternString(const char* str)
{
	StringID strID = HashString(str);
	size_t bufferSize = strlen(str) + 1U;

	std::map<StringID, const char*>::iterator itr = m_stringIDs.find(strID);	
	if (itr == m_stringIDs.end())
	{
		// Allocate and add the string
		char* temp = (char*) malloc(bufferSize);
		strncpy_s(temp, bufferSize, str, strlen(str));
		m_stringIDs[strID] = temp;
	}
	else
	{
		// Check for hash collisions
		ASSERT_OR_DIE(strcmp(str, itr->second) == 0, "Hash collision on strings %s and %s", str, itr->second);
	}

	return strID;
}


//-------------------------------------------------------------------------------------------------
StringIDManager::~StringIDManager()
{
	// Free up any id's in the map

}

