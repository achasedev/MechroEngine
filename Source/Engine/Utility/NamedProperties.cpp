///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: March 23th, 2020
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// INCLUDES
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/Utility/NamedProperties.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// DEFINES
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// ENUMS, TYPEDEFS, STRUCTS, FORWARD DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// GLOBALS AND STATICS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// C FUNCTIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// CLASS IMPLEMENTATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
void NamedProperties::Set(const StringID& name, const char* value)
{
	Set(name, std::string(value));
}


//-------------------------------------------------------------------------------------------------
void NamedProperties::Set(const char* name, const char* value)
{
	Set(name, std::string(value));
}


//-------------------------------------------------------------------------------------------------
void NamedProperties::Set(const std::string& name, const char* value)
{
	Set(name, std::string(value));
}


//-------------------------------------------------------------------------------------------------
std::string NamedProperties::Get(const StringID& name, const char* defaultValue)
{
	return Get(name, std::string(defaultValue));
}


//-------------------------------------------------------------------------------------------------
std::string NamedProperties::Get(const char* name, const char* defaultValue)
{
	return Get(name, std::string(defaultValue));
}


//-------------------------------------------------------------------------------------------------
std::string NamedProperties::Get(const std::string& name, const char* defaultValue)
{
	return Get(name, std::string(defaultValue));
}


//-------------------------------------------------------------------------------------------------
std::string NamedProperties::ToString() const
{
	std::string totalString;
	std::map<StringID, BaseProperty*>::const_iterator itr = m_properties.begin();

	for (itr; itr != m_properties.end(); itr++)
	{
		if (StringIDSystem::IsInitialized())
		{
			// Convert StringID's to const char* for printing
			const char* name = g_sidSystem->GetStringForStringID(itr->first);

			totalString += Stringf("\"%s\" -> ", name);
		}

		totalString += Stringf("%s\n", itr->second->GetValueAsString().c_str());
	}

	return totalString;
}
