///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: December 16th, 2019
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** INCLUDES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/DirectX/Camera.h"
#include "Engine/DirectX/ColorTargetView.h"
#include "Engine/DirectX/RenderContext.h"
#include "Engine/DirectX/UniformBuffer.h"
#include "Engine/Framework/EngineCommon.h"
#include "Engine/Framework/Window.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** DEFINES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                              *** TYPES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** STRUCTS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
struct CameraBuffer
{
	Vector2 m_orthoMins;
	Vector2 m_orthoMaxs;
};

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                        *** GLOBALS AND STATICS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                           *** C FUNCTIONS ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
///                                                             *** CLASSES ***
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
Camera::Camera()
{
	m_colorTarget = new ColorTargetView();

	// Set the target to the backbuffer (for now)
	RenderContext* renderContext = RenderContext::GetInstance();
	IDXGISwapChain* swapChain = renderContext->GetDxSwapChain();

	ID3D11Texture2D* backbuffer = nullptr;
	swapChain->GetBuffer(0, __uuidof(ID3D11Texture2D), (LPVOID*)&backbuffer);

	// Store it off
	m_colorTarget->InitForTexture(backbuffer);

	// Release the local reference to the backbuffer
	DX_SAFE_RELEASE(backbuffer);
}


//-------------------------------------------------------------------------------------------------
Camera::~Camera()
{
	SAFE_DELETE_POINTER(m_cameraUBO);
	SAFE_DELETE_POINTER(m_colorTarget);
}


//-------------------------------------------------------------------------------------------------
void Camera::SetOrthoProjection(float orthoHeight)
{
	float aspect = Window::GetInstance()->GetClientAspect();
	m_orthoBounds.mins = Vector2::ZERO;
	m_orthoBounds.maxs = Vector2(orthoHeight * aspect, orthoHeight);
	m_nearClipZ = -1.0f;
	m_farClipZ = 1.0f;
	m_projectionMatrix = Matrix44::MakeOrtho(m_orthoBounds.mins, m_orthoBounds.maxs, m_nearClipZ, m_farClipZ);
}


//-------------------------------------------------------------------------------------------------
void Camera::UpdateUBO()
{
	// Lazy instantiation
	if (m_cameraUBO == nullptr)
	{
		m_cameraUBO = new UniformBuffer();
	}

	CameraBuffer cameraData;
	cameraData.m_orthoMins = m_orthoBounds.mins;
	cameraData.m_orthoMaxs = m_orthoBounds.maxs;

	m_cameraUBO->CopyToGpu(&cameraData, sizeof(cameraData));
}
