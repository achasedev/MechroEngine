///--------------------------------------------------------------------------------------------------------------------------------------------------
/// Author: Andrew Chase
/// Date Created: February 15th, 2020
/// Description: 
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// INCLUDES
///--------------------------------------------------------------------------------------------------------------------------------------------------
#include "Engine/DirectX/MeshBuilder.h"

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// DEFINES
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// ENUMS, TYPEDEFS, STRUCTS, FORWARD DECLARATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// GLOBALS AND STATICS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// C FUNCTIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

///--------------------------------------------------------------------------------------------------------------------------------------------------
/// CLASS IMPLEMENTATIONS
///--------------------------------------------------------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------
MeshBuilder::~MeshBuilder()
{
	Clear();
}


//-------------------------------------------------------------------------------------------------
void MeshBuilder::BeginBuilding(bool useIndices)
{
	ASSERT_RECOVERABLE(!m_isBuilding, "You're already building!");

	Clear();

	m_instruction.m_useIndices = useIndices;
	m_isBuilding = true;
}


//-------------------------------------------------------------------------------------------------
void MeshBuilder::FinishBuilding()
{
	if (m_instruction.m_useIndices) { m_instruction.m_elementCount = (uint32)m_indices.size(); }
	else							{ m_instruction.m_elementCount = (uint32)m_vertices.size(); }

	m_isBuilding = false;	
}


//-------------------------------------------------------------------------------------------------
void MeshBuilder::Clear()
{
	m_stamp = VertexMaster();

	m_vertices.clear();
	m_indices.clear();
	m_isBuilding = false;
}


//-------------------------------------------------------------------------------------------------
void MeshBuilder::SetColor(const Rgba& color)
{
	m_stamp.m_color = color;
}


//-------------------------------------------------------------------------------------------------
void MeshBuilder::SetUV(const Vector2& uv)
{
	m_stamp.m_uvs = uv;
}


//-------------------------------------------------------------------------------------------------
void MeshBuilder::SetDrawInstruction(const DrawInstruction& instruction)
{
	m_instruction = instruction;
}


//-------------------------------------------------------------------------------------------------
void MeshBuilder::SetDrawInstruction(bool useIndices, uint32 startIndex, uint32 elementCount)
{
	m_instruction = DrawInstruction(useIndices, startIndex, elementCount);
}

//-------------------------------------------------------------------------------------------------
uint32 MeshBuilder::PushVertex(const Vector3& position)
{
	m_stamp.m_position = position;

	m_vertices.push_back(m_stamp);
	return (uint32)m_vertices.size() - 1;
}


//-------------------------------------------------------------------------------------------------
uint32 MeshBuilder::PushVertex(const VertexMaster& master)
{
	m_stamp = master;
	m_vertices.push_back(m_stamp);
	return (uint32)m_vertices.size() - 1;
}


//-------------------------------------------------------------------------------------------------
void MeshBuilder::PushIndex(uint32 index)
{
	ASSERT_RECOVERABLE(m_instruction.m_useIndices, "Pushing indices with a non-indexed builder");
	m_indices.push_back(index);
}
